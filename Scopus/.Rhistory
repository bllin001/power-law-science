setwd("C:/Users/humbe/OneDrive - Universidad del Norte/Drive/OJO/Uninorte/Investigacion/Papers/Papers Ejecucion/Paper Brian1_2_5-PowerLaw/2024 PowerLaw P1-Scopus/Scopus")
#knitr::opts_chunk$\alphaet(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(fig.align = "center") #solo para html
knitr::opts_chunk$set(fig.width = 8)
knitr::opts_chunk$set(dpi = 1200)
library(ggplot2)
library(dplyr)
library(tidyr)
library(kableExtra)
library(sads)
library(latexpdf)
library(igraph)
library(poweRlaw)
library(readr)
# Data Lecture
# library(readr)
data <- read.csv("power_law.csv")
head(data)
# data[c(1:5,(NROW(data)-5):NROW(data)),] %>%
#   kable(align = "lcc")  %>% #solo para html
#   kable_styling() %>%
#   kable_classic_2(full_width = F)
# Data clean
data_clean <- data %>%
filter(topic == 1,
Cited.by > 0) %>%
select(Title, Cited.by)
head(data_clean)
# Zip Analysis
# Set alpha value
alpha <- 1
# Perform the Zipf analysis
word_count <- data_clean %>%
arrange(desc(Cited.by)) %>%
mutate(factor = Title,
count = Cited.by,
prop = round(count / sum(count), 2),
relation = round(first(count) / count, 2),
rank = row_number(),
zipfs = ifelse(rank == 1, count,
round(first(count) / rank^alpha, 2)),
error = round(abs(zipfs - count) / zipfs, 2)
) %>%
relocate(rank, .before = factor)
# Display the results in a table
word_count %>%
kable(align = "lcc") %>%
kable_styling(latex_options = "HOLD_position") %>%
kable_classic_2(full_width = FALSE) %>%
row_spec(which(word_count$count == 0), bold = TRUE,
color = "white", background = "red") -> word_count
head(word_count)
dim(word_count)
library(openxlsx)
write.xlsx(word_count, "word_count.xls",
sheetName = "hoja_de_trabajo", rowNames = FALSE)
write.csv(word_count,file="word_count.csv")
ggplot(word_count, aes(x = rank, y = count)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed")) +
theme_bw() +
geom_point(aes(y = zipfs, color = "theoretical")) +
geom_line(aes(y = zipfs, color = "theoretical")) +
labs(x = "Rank", y = "Count", title = "Zipf's law visualization for Topic 0") +
scale_colour_manual(name = "Word count", values=c("theoretical" = "red", "observed" = "black")) +
theme(legend.position = "top")
#knitr::opts_chunk$\alphaet(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(fig.align = "center") #solo para html
knitr::opts_chunk$set(fig.width = 8)
knitr::opts_chunk$set(dpi = 1200)
library(ggplot2)
library(dplyr)
library(tidyr)
library(kableExtra)
library(sads)
library(latexpdf)
library(igraph)
library(poweRlaw)
library(readr)
# Data Lecture
# library(readr)
data <- read.csv("power_law.csv")
head(data)
# data[c(1:5,(NROW(data)-5):NROW(data)),] %>%
#   kable(align = "lcc")  %>% #solo para html
#   kable_styling() %>%
#   kable_classic_2(full_width = F)
# Data clean
data_clean <- data %>%
filter(topic == 1,
Cited.by > 0) %>%
select(Title, Cited.by)
head(data_clean)
# Zip Analysis
# Set alpha value
alpha <- 1
# Perform the Zipf analysis
word_count <- data_clean %>%
arrange(desc(Cited.by)) %>%
mutate(factor = Title,
count = Cited.by,
prop = round(count / sum(count), 2),
relation = round(first(count) / count, 2),
rank = row_number(),
zipfs = ifelse(rank == 1, count,
round(first(count) / rank^alpha, 2)),
error = round(abs(zipfs - count) / zipfs, 2)
) %>%
relocate(rank, .before = factor)
df.word_count <- word_count
head(df.word_count)
dim(df.word_count)
# Display the results in a table
word_count %>%
kable(align = "lcc") %>%
kable_styling(latex_options = "HOLD_position") %>%
kable_classic_2(full_width = FALSE) %>%
row_spec(which(word_count$count == 0), bold = TRUE,
color = "white", background = "red")
#knitr::opts_chunk$\alphaet(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(fig.align = "center") #solo para html
knitr::opts_chunk$set(fig.width = 8)
knitr::opts_chunk$set(dpi = 1200)
library(ggplot2)
library(dplyr)
library(tidyr)
library(kableExtra)
library(sads)
library(latexpdf)
library(igraph)
library(poweRlaw)
library(readr)
# Data Lecture
# library(readr)
data <- read.csv("power_law.csv")
head(data)
# data[c(1:5,(NROW(data)-5):NROW(data)),] %>%
#   kable(align = "lcc")  %>% #solo para html
#   kable_styling() %>%
#   kable_classic_2(full_width = F)
# Data clean
data_clean <- data %>%
filter(topic == 1,
Cited.by > 0) %>%
select(Title, Cited.by)
head(data_clean)
# Zip Analysis
# Set alpha value
alpha <- 1
# Perform the Zipf analysis
word_count <- data_clean %>%
arrange(desc(Cited.by)) %>%
mutate(factor = Title,
count = Cited.by,
prop = round(count / sum(count), 2),
relation = round(first(count) / count, 2),
rank = row_number(),
zipfs = ifelse(rank == 1, count,
round(first(count) / rank^alpha, 2)),
error = round(abs(zipfs - count) / zipfs, 2)
) %>%
relocate(rank, .before = factor)
df.word_count <- word_count
head(df.word_count)
dim(df.word_count)
# Display the results in a table
word_count %>%
kable(align = "lcc") %>%
kable_styling(latex_options = "HOLD_position") %>%
kable_classic_2(full_width = FALSE) %>%
row_spec(which(word_count$count == 0), bold = TRUE,
color = "white", background = "red")
library(openxlsx)
write.xlsx(df.word_count, "word_count.xls",
sheetName = "hoja_de_trabajo", rowNames = FALSE)
write.csv(df.word_count,file="word_count.csv")
ggplot(word_count, aes(x = rank, y = count)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed")) +
theme_bw() +
geom_point(aes(y = zipfs, color = "theoretical")) +
geom_line(aes(y = zipfs, color = "theoretical")) +
labs(x = "Rank", y = "Count", title = "Zipf's law visualization for Topic 0") +
scale_colour_manual(name = "Word count", values=c("theoretical" = "red", "observed" = "black")) +
theme(legend.position = "top")
ggplot(word_count, aes(x = rank, y = count)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed")) +
theme_bw() +
geom_point(aes(y = zipfs, color = "theoretical")) +
geom_line(aes(y = zipfs, color = "theoretical")) +
labs(x = "Rank", y = "Count", title = "Zipf's law visualization for Topic 1") +
scale_colour_manual(name = "Word count", values=c("theoretical" = "red", "observed" = "black")) +
theme(legend.position = "top")
Valores <- word_count$count
m_pl <- displ$new(Valores)
#m_pl
est_pl <- estimate_xmin(m_pl)
est_pl
MyLabel <- c("Method", "alfa", "Xmin", "ntail", "Stat", "P_value")
alfa <-est_pl$pars
xmin <-est_pl$xmin
ntail <-est_pl$ntail
stat <- est_pl$gof
P_value <- "NA"
KS_result <- c("MLE-KS", alfa , xmin, ntail, stat, P_value)
KS_df <- data.frame(rbind(KS_result))
names(KS_df) <- MyLabel
KS_df
```{r}
library(openxlsx)
write.xlsx(KS_df, "KS_df.xls",
sheetName = "hoja_de_trabajo", rowNames = FALSE)
write.csv(KS_df,file="KS_df.csv")
m_pl$setXmin(est_pl)
m_pl
bs_pl <- bootstrap_p(m_pl, no_of_sims=1000, threads=8, seed = 123)
#threads=core number of processor that used by function
#parallel::detectCores() determines how many cores in your computer
bs_pl
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-mean(bs_pl$bootstraps[, 3]) # Media of pars (es el alfa, exponente)
sd_alfa<-sd(bs_pl$bootstraps[, 3]) # sd of pars (es el alfa, exponente)
xmin <-mean(bs_pl$bootstraps[, 2]) # Media of Xmin
sd_xmin <-sd(bs_pl$bootstraps[, 2]) # sd of Xmin
ntail <-mean(bs_pl$bootstraps[, 4]) # Media of ntail
sd_ntail <- sd(bs_pl$bootstraps[, 4]) # sd of ntail
stat <- mean(bs_pl$bootstraps[, 1]) # Media of gof (es el KS)
sd_stat <- sd(bs_pl$bootstraps[, 1]) # sd of gof (es el KS)
P_value <- bs_pl$p
boot_result <- c("Bootstrapping", alfa , sd_alfa, xmin,sd_xmin, ntail,sd_ntail, stat, sd_stat, P_value)
Boot_df <- data.frame(rbind(KS_result))
names(Boot_df) <- MyLabel
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-mean(bs_pl$bootstraps[, 3]) # Media of pars (es el alfa, exponente)
sd_alfa<-sd(bs_pl$bootstraps[, 3]) # sd of pars (es el alfa, exponente)
xmin <-mean(bs_pl$bootstraps[, 2]) # Media of Xmin
sd_xmin <-sd(bs_pl$bootstraps[, 2]) # sd of Xmin
ntail <-mean(bs_pl$bootstraps[, 4]) # Media of ntail
sd_ntail <- sd(bs_pl$bootstraps[, 4]) # sd of ntail
stat <- mean(bs_pl$bootstraps[, 1]) # Media of gof (es el KS)
sd_stat <- sd(bs_pl$bootstraps[, 1]) # sd of gof (es el KS)
P_value <- bs_pl$p
boot_result <- c("Bootstrapping", alfa , sd_alfa, xmin, sd_xmin, ntail, sd_ntail, stat, sd_stat, P_value)
Boot_df <- data.frame(rbind(Boot_df))
names(Boot_df) <- MyLabel
View(Boot_df)
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-mean(bs_pl$bootstraps[, 3]) # Media of pars (es el alfa, exponente)
sd_alfa<-sd(bs_pl$bootstraps[, 3]) # sd of pars (es el alfa, exponente)
xmin <-mean(bs_pl$bootstraps[, 2]) # Media of Xmin
sd_xmin <-sd(bs_pl$bootstraps[, 2]) # sd of Xmin
ntail <-mean(bs_pl$bootstraps[, 4]) # Media of ntail
sd_ntail <- sd(bs_pl$bootstraps[, 4]) # sd of ntail
stat <- mean(bs_pl$bootstraps[, 1]) # Media of gof (es el KS)
sd_stat <- sd(bs_pl$bootstraps[, 1]) # sd of gof (es el KS)
P_value <- bs_pl$p
boot_result <- c("Bootstrapping", alfa , sd_alfa, xmin, sd_xmin, ntail, sd_ntail, stat, sd_stat, P_value)
boot_df <- data.frame(rbind(boot_df))
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-mean(bs_pl$bootstraps[, 3]) # Media of pars (es el alfa, exponente)
sd_alfa<-sd(bs_pl$bootstraps[, 3]) # sd of pars (es el alfa, exponente)
xmin <-mean(bs_pl$bootstraps[, 2]) # Media of Xmin
sd_xmin <-sd(bs_pl$bootstraps[, 2]) # sd of Xmin
ntail <-mean(bs_pl$bootstraps[, 4]) # Media of ntail
sd_ntail <- sd(bs_pl$bootstraps[, 4]) # sd of ntail
stat <- mean(bs_pl$bootstraps[, 1]) # Media of gof (es el KS)
sd_stat <- sd(bs_pl$bootstraps[, 1]) # sd of gof (es el KS)
P_value <- bs_pl$p
boot_result <- c("Bootstrapping", alfa , sd_alfa, xmin, sd_xmin, ntail, sd_ntail, stat, sd_stat, P_value)
boot_df <- data.frame(rbind(boot_result))
names(boot_df) <- MyLabel
boot_df
Estimation <- dataframe(rbind(KS_df, boot_df))
Estimation <- data.frame(rbind(KS_df, boot_df))
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-est_pl$pars
sd_alfa<-"NA"
xmin <-est_pl$xmin
sd_xmin <-"NA"
ntail <-est_pl$ntail
sd_ntail <-"NA"
stat <- est_pl$gof
sd_stat <-"NA"
P_value <- "NA"
KS_result <- c("MLE-KS", alfa , xmin, ntail, stat, P_value)
KS_df <- data.frame(rbind(KS_result))
names(KS_df) <- MyLabel
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-est_pl$pars
sd_alfa<-"NA"
xmin <-est_pl$xmin
sd_xmin <-"NA"
ntail <-est_pl$ntail
sd_ntail <-"NA"
stat <- est_pl$gof
sd_stat <-"NA"
P_value <- "NA"
KS_result <- c("MLE-KS",  alfa , sd_alfa, xmin, sd_xmin, ntail, sd_ntail, stat, sd_stat, P_value)
KS_df <- data.frame(rbind(KS_result))
names(KS_df) <- MyLabel
KS_df
MyLabel <- c("Method", "alfa", "sd_alfa", "Xmin", "sd_xmin", "ntail", "sd_ntail", "Stat", "sd_stat", "P_value")
alfa <-mean(bs_pl$bootstraps[, 3]) # Media of pars (es el alfa, exponente)
sd_alfa<-sd(bs_pl$bootstraps[, 3]) # sd of pars (es el alfa, exponente)
xmin <-mean(bs_pl$bootstraps[, 2]) # Media of Xmin
sd_xmin <-sd(bs_pl$bootstraps[, 2]) # sd of Xmin
ntail <-mean(bs_pl$bootstraps[, 4]) # Media of ntail
sd_ntail <- sd(bs_pl$bootstraps[, 4]) # sd of ntail
stat <- mean(bs_pl$bootstraps[, 1]) # Media of gof (es el KS)
sd_stat <- sd(bs_pl$bootstraps[, 1]) # sd of gof (es el KS)
P_value <- bs_pl$p
boot_result <- c("Bootstrapping", alfa , sd_alfa, xmin, sd_xmin, ntail, sd_ntail, stat, sd_stat, P_value)
boot_df <- data.frame(rbind(boot_result))
names(boot_df) <- MyLabel
boot_df
Estimation <- data.frame(rbind(KS_df, boot_df))
library(openxlsx)
write.xlsx(Estimation, "Estimation.xls",
sheetName = "hoja_de_trabajo", rowNames = FALSE)
write.csv(Estimation,file="Estimation.csv")
library(openxlsx)
write.xlsx(df.word_count, "T1_word_count.xls",
sheetName = "hoja_de_trabajo", rowNames = FALSE)
write.csv(df.word_count,file="T1_word_count.csv")
Estimation <- data.frame(rbind(KS_df, boot_df))
library(openxlsx)
write.xlsx(Estimation, "T1_Estimation.xls",
sheetName = "hoja_de_trabajo", rowNames = FALSE)
write.csv(Estimation,file="T1_Estimation.csv")
